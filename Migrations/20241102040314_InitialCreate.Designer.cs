// <auto-generated />
using System;
using LicoreriaBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicoreriaBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241102040314_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LicoreriaBackend.Models.Bodega", b =>
                {
                    b.Property<int>("Id_bodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_bodega"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Id_producto")
                        .HasColumnType("int");

                    b.HasKey("Id_bodega");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Categoria", b =>
                {
                    b.Property<int>("CodigoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Compra", b =>
                {
                    b.Property<int>("Id_compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_compra"));

                    b.Property<int>("Id_proveedor")
                        .HasColumnType("int");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int");

                    b.Property<string>("Sub_total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_compra");

                    b.HasIndex("Id_proveedor");

                    b.HasIndex("Idusuario");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Detalle_compra", b =>
                {
                    b.Property<int>("Id_detalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_detalleCompra"));

                    b.Property<string>("Cantidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IVA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_compra")
                        .HasColumnType("int");

                    b.Property<string>("Precio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_detalleCompra");

                    b.HasIndex("Id_compra");

                    b.ToTable("DetallesCompras");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Detalle_venta", b =>
                {
                    b.Property<int>("Id_detalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_detalle"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_producto")
                        .HasColumnType("int");

                    b.Property<int>("Id_venta")
                        .HasColumnType("int");

                    b.Property<string>("Sub_total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("cantidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_detalle");

                    b.HasIndex("Id_producto");

                    b.HasIndex("Id_venta");

                    b.ToTable("DetalleVentas");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Producto", b =>
                {
                    b.Property<int>("CodigoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoProducto"));

                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_bodega")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoProducto");

                    b.HasIndex("CodigoCategoria");

                    b.HasIndex("Id_bodega");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Proveedor", b =>
                {
                    b.Property<int>("Id_proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_proveedor"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_proveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idusuario"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idusuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Venta", b =>
                {
                    b.Property<int>("Id_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_venta"));

                    b.Property<int>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("IVA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioIdusuario")
                        .HasColumnType("int");

                    b.HasKey("Id_venta");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("UsuarioIdusuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Compra", b =>
                {
                    b.HasOne("LicoreriaBackend.Models.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("Id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicoreriaBackend.Models.Usuario", "Usuario")
                        .WithMany("Compras")
                        .HasForeignKey("Idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Detalle_compra", b =>
                {
                    b.HasOne("LicoreriaBackend.Models.Compra", "Compra")
                        .WithMany("DetallesCompras")
                        .HasForeignKey("Id_compra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Detalle_venta", b =>
                {
                    b.HasOne("LicoreriaBackend.Models.Producto", "Producto")
                        .WithMany("DetallesVentas")
                        .HasForeignKey("Id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicoreriaBackend.Models.Venta", "Venta")
                        .WithMany("DetallesVentas")
                        .HasForeignKey("Id_venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Producto", b =>
                {
                    b.HasOne("LicoreriaBackend.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CodigoCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicoreriaBackend.Models.Bodega", "Bodegas")
                        .WithMany("Productos")
                        .HasForeignKey("Id_bodega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodegas");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Venta", b =>
                {
                    b.HasOne("LicoreriaBackend.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LicoreriaBackend.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Bodega", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Compra", b =>
                {
                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Producto", b =>
                {
                    b.Navigation("DetallesVentas");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Usuario", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("LicoreriaBackend.Models.Venta", b =>
                {
                    b.Navigation("DetallesVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
